
services:
  flask:
    build: ./flask
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    depends_on:
      - mongo
    networks:
      - backend
    volumes:
      - ./flask:/app

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - flask
    networks:
      - backend


  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=tutel
    #   - MONGO_INITDB_ROOT_PASSWORD=7yP;g94v!W`/(;l44T


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      # ME_CONFIG_MONGODB_ADMINUSERNAME: tutel
      # ME_CONFIG_MONGODB_ADMINPASSWORD: 7yP%3Bg94v!W%60%2F(%3Bl44T
      ME_CONFIG_BASICAUTH: TRUE
    depends_on:
      - mongo
    networks:
      - backend
  
  frontend_server:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /frontend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
        - action: rebuild
          path: package-lock.json
    networks:
      - backend

networks:
  backend: 
  frontend:

volumes:
  mongo-data:
